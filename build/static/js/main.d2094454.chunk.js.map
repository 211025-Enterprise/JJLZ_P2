{"version":3,"sources":["components/todo/AuthenticationService.js","components/todo/AuthenticatedRoute.jsx","components/todo/LoginComponent.jsx","components/todo/SearchBar.jsx","components/todo/WatchListComponent.jsx","components/todo/ErrorComponent.jsx","components/todo/HeaderComponent.jsx","components/todo/FooterComponent.jsx","components/todo/LogoutComponent.jsx","components/todo/WelcomeComponent.jsx","components/todo/RegistrationComponent.jsx","components/todo/UserDetailComponent.jsx","components/todo/StockComponent.jsx","components/todo/JJLZ.jsx","components/todo/UpdateBalance.jsx","components/todo/TodoApp.jsx","App.js","serviceWorker.js","index.js"],"names":["todo_AuthenticationService","getLoggedInUserName","user","sessionStorage","getItem","username","password","axios","get","headers","authorization","this","createBasicAuthToken","window","btoa","setItem","setupAxiosInterceptors","removeItem","basicAuthHeader","_this","interceptors","request","use","config","isUserLoggedIn","AuthenticatedRoute","AuthenticationService","react_default","a","createElement","Route","props","Redirect","to","Component","LoginComponent","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","defineProperty","target","name","value","handleSubmit","preventDefault","initialState","login","history","push","concat","state","loggedUser","post","then","response","data","registerSuccessfulLogin","alert","catch","refreshPage","location","reload","render","className","onSubmit","type","placeholder","onChange","onClick","SearchBar","action","method","align","htmlFor","id","WatchListComponent","todos","stockname","price","targetDate","Date","todo_SearchBar","map","todo","key","toString","ErrorComponent","HeaderComponent","console","log","Link","logout","withRouter","FooterComponent","LogoutComponent","Fragment","WelcomeComponent","match","params","RegistrationComponent","firstName","lastName","register","event","UserComponent","componentDidMount","getAllUsers","updateBalance","users","userName","newBalance","put","userId","balance","StockComponent","stockChartXValues","stockChartYValues","fetchStock","pointerToThis","API_Call","stockChartXValuesFunction","stockChartYValuesFunction","fetch","json","react_plotly_default","x","y","mode","marker","color","layout","width","height","title","UpdateBalance","TodoApp","BrowserRouter","todo_HeaderComponent","Switch","path","exact","component","JJLZ","UserDetailComponent","todo_AuthenticatedRoute","todo_FooterComponent","App","todo_TodoApp","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d2094454.chunk.js","sourcesContent":["import axios from 'axios'\nclass AuthenticationService {\n\n\n    executeBasicAuthenticationService(username, password) {\n        return axios.get('http://localhost:8080/basicauth', \n            {headers: {authorization: this.createBasicAuthToken(username,password)}})\n    }\n\n    createBasicAuthToken(username,password) {\n        return 'Basic ' +  window.btoa(username + \":\" + password)\n    }\n\n    registerSuccessfulLogin(username,password){\n        //let basicAuthHeader = 'Basic ' +  window.btoa(username + \":\" + password)\n        //console.log('registerSuccessfulLogin')\n        sessionStorage.setItem('authenticatedUser', username)\n        this.setupAxiosInterceptors(this.createBasicAuthToken(username,password))\n    }\n\n    logout() {\n        sessionStorage.removeItem('authenticatedUser');\n    }\n\n    isUserLoggedIn() {\n        let user = sessionStorage.getItem('authenticatedUser')\n        if(user===null) return false\n        return true\n    }\n\n    getLoggedInUserName = () => {\n        let user = sessionStorage.getItem('authenticatedUser')\n        if(user===null) return ''\n        return user\n    }\n\n    setupAxiosInterceptors(basicAuthHeader) {\n\n        axios.interceptors.request.use(\n            (config) => {\n                if(this.isUserLoggedIn()) {\n                    config.headers.authorization = basicAuthHeader\n                }\n                return config\n            }\n        )\n    }\n     // registerSuccessfulLogin(username,password){\n    //    // console.log('registerSuccessfulLogin')\n    //     sessionStorage.setItem('authenticatedUser', username);\n    // }\n\n    // logout() {\n    //     sessionStorage.removeItem('authenticatedUser');\n    // }\n\n    // isUserLoggedIn() {\n    //     let user = sessionStorage.getItem('authenticatedUser')\n    //     if(user === null) return false\n    //     return true\n    // }\n\n}\n\nexport default new AuthenticationService()","import React, {Component} from 'react'\nimport {Route, Redirect} from 'react-router-dom'\nimport AuthenticationService from './AuthenticationService.js'\n\nclass AuthenticatedRoute extends Component {    \n    render() {\n        if(AuthenticationService.isUserLoggedIn()) {\n            return <Route {...this.props}/>\n        } else {\n            return <Redirect to=\"/login\"/>\n        }\n\n    }\n}\n\nexport default AuthenticatedRoute","import React, {Component} from 'react'\nimport AuthenticationService from './AuthenticationService.js'\nimport axios from 'axios'\nclass LoginComponent extends Component {\n    \n    constructor(props) {\n        super(props)\n        this.state = this.initialState\n    }\n\n    handleChange = (e) => {\n        this.setState(\n            {\n                [e.target.name]\n                  :e.target.value\n            }\n        )\n    }\n\n    handleSubmit= (e)=> {\n        // Process submit from this.state\n        e.preventDefault(); // Need to stop DOM from generating a POST\n        }\n    initialState={\n            username: \"\",\n            password: \"\"\n       }\n    login = ()=> {\n       this.props.history.push(`/welcome/${this.state.username}`)\n        const loggedUser = {\n            username: this.state.username,\n            password: this.state.password\n           }  \n           axios.post('http://localhost:8080/logged', loggedUser) \n          .then((response) => {\n              if(response.data != null)\n              AuthenticationService.registerSuccessfulLogin(this.state.username,this.state.password)  \n                this.setState(this.initialState)     \n               alert(\"You have logged in Successfully\")                \n           }).catch(() => \n           alert(\"User not exsit\"),  \n             this.refreshPage()\n           )                  \n    }\n\n      refreshPage = () => {\n         window.location.reload(false);\n       }\n    \n    render = () => {\n        return (\n            <div>\n                <h1>Login</h1>\n                <div className=\"container\">\n                <form onSubmit={this.handleSubmit}>\n                    UserName: <input type=\"text\" name=\"username\" value={this.state.username} placeholder='Enter username' onChange={this.handleChange}/>\n                    Password: <input type=\"password\" name=\"password\" value={this.state.password} placeholder='Enter password' onChange={this.handleChange}/>\n                    <button className=\"btn btn-success \" onClick={this.login} >Login</button><br />\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\n    \nexport default LoginComponent","import React from \"react\";\r\nfunction SearchBar()  {\r\n\r\n    return (\r\n    \r\n\r\n      <form action=\"/stock\" method=\"get\" align=\"center\">\r\n        <label htmlFor=\"header-search\">\r\n          <span className=\"visually-hidden\"> Search Stock Name</span>\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"header-search\"\r\n          placeholder=\"Enter Stock Name\"\r\n          name=\"s\"\r\n        />\r\n        <button type=\"submit\">Search</button>\r\n      </form>   \r\n    );\r\n}\r\nexport default SearchBar;\r\n","import React, {Component} from 'react'\n//import DataService from '../../api/todo/DataService.js'\nimport SearchBar  from './SearchBar.jsx'\n\nclass WatchListComponent extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            todos : \n            [\n             {id: 1, stockname : 'Amazon',price: '$700' , targetDate: new Date()},\n             {id: 2, stockname : 'Home Depo',price: '$300' , targetDate: new Date()},\n             {id: 3, stockname : 'Revature',price: '$400' , targetDate: new Date()}\n            ]\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                 <h1>Watch List</h1>\n                  <SearchBar/> \n                 <div className=\"container\">\n                    <table className=\"table\">\n                        <thead>\n                            <tr>\n                                <th>Stock Name</th>\n                                <th>Price</th>\n                                <th>Target Date</th>                   \n                            </tr>\n                        </thead>\n                        <tbody>\n                        {\n                            this.state.todos.map (\n                                todo =>\n                                    <tr key={todo.id}>\n                                        <td>{todo.stockname}</td>\n                                        <td>{todo.price}</td>\n                                        <td>{todo.targetDate.toString()}</td>\n                                    </tr>\n                            )\n                            }\n                        </tbody>\n                    </table>\n                 </div>\n            </div>\n        )\n    }\n}\n\n// function SearchBar(){\n\n//     return (<form action=\"/welcome/name\" method=\"get\">\n//     <label htmlFor=\"header-search\">\n//         <span className=\"visually-hidden\">Search Stock Name</span>\n//     </label>\n//     <input\n//         type=\"text\"\n//         id=\"header-search\"\n//         placeholder=\"Search blog posts\"\n//         name=\"s\" \n//     />\n//     <button type=\"submit\">Search</button>\n//     </form>)\n    \n//     }\nexport default WatchListComponent","import React from 'react'\n\nfunction ErrorComponent() {\n    return <div>An Error Occurred. I don't know what to do! Contact support at JJLZ</div>\n}\n\nexport default ErrorComponent","import React, {Component} from 'react'\nimport { withRouter, Link } from 'react-router-dom';\nimport AuthenticationService from './AuthenticationService.js'\n\n\nclass HeaderComponent extends Component {\n    render() {\n    \n        const isUserLoggedIn = AuthenticationService.isUserLoggedIn();\n        console.log(isUserLoggedIn);\n\n        return (\n        \n            <header>\n                <nav className=\"navbar navbar-expand-md navbar-dark bg-info\">\n                    {<Link className=\"nav-link navbar-brand\" to=\"/jjlz\">JJLZ</Link>}\n                    <ul className=\"navbar-nav\">\n                        {isUserLoggedIn && <li><Link className=\"nav-link text-dark\" to=\"/welcome/JJLZ\">Home</Link></li>}\n                        {!isUserLoggedIn && <li><Link className=\"nav-link text-dark\" to=\"/welcome\">Home</Link></li>}\n                        {isUserLoggedIn && <li><Link className=\"nav-link text-dark\" to=\"/watchlist\">Watch List</Link></li>}\n                        {isUserLoggedIn && <li><Link className=\"nav-link text-dark\" to=\"/userDetail\">UserDetail</Link></li>}\n                        {isUserLoggedIn && <li><Link className=\"nav-link text-dark\" to=\"/stock\">Stock_Symbol</Link></li>}\n                    </ul>\n                    <ul className=\"navbar-nav navbar-collapse justify-content-end\">\n                        {!isUserLoggedIn &&<li><Link className=\"nav-link text-dark\" to=\"/register\">Register</Link></li>}\n                        {!isUserLoggedIn && <li><Link className=\"nav-link text-dark\" to=\"/login\">Login</Link></li>}\n                        {isUserLoggedIn && <li><Link className=\"nav-link text-dark\" to=\"/logout\" onClick={AuthenticationService.logout}>Logout</Link></li>}\n                    </ul>\n                </nav>\n            </header>\n        )\n    }\n}\nexport default withRouter(HeaderComponent)","import React, {Component} from 'react'\n\nclass FooterComponent extends Component {\n    render() {\n        return (\n            <footer className=\"footer bg-info\">\n                <span className=\"text-dark\">All Rights Reserved 2021 @JJLZ</span>\n            </footer>\n        )\n    }\n}\n\nexport default FooterComponent","import React, {Component} from 'react'\n\nclass LogoutComponent extends Component {\n    render() {\n        return (\n            <>\n                <h1>You are logged out</h1>\n                <div className=\"container\">\n                    Thank You for Using Our Application.\n                </div>\n            </>\n        )\n    }\n}\n\nexport default LogoutComponent","import React, {Component} from 'react'\nimport {Link} from 'react-router-dom'\nimport AuthenticationService from './AuthenticationService.js'\nclass WelcomeComponent extends Component {\n    render() {\n        const isUserLoggedIn = AuthenticationService.isUserLoggedIn();\n        return (\n            \n            <>\n                <h1>Welcome To JJLZ!</h1>\n                <div className=\"container\">    \n                {/* Welcome {this.props.match.params.name}. You can manage your todos <Link to=\"/watchlist\">Watch List</Link>. */}\n                Welcome {this.props.match.params.name}. You can manage your Stocks.\n                <br/><br/>\n                {!isUserLoggedIn &&<Link className=\"nav-link text-info\" to=\"/register\">Register</Link>}\n                {!isUserLoggedIn &&<Link className=\"nav-link text-info\" to=\"/login\">Login</Link>}\n                </div>       \n            </>        \n        )        \n    }\n}\nexport default WelcomeComponent","import React, {Component} from 'react'\r\n//import AuthenticationService from './AuthenticationService.js'\r\nimport axios from 'axios'\r\nclass RegistrationComponent extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = this.initialState\r\n    }\r\n\r\n   initialState={\r\n    firstName: '',\r\n    lastName: '',\r\n    username: '',\r\n    password: ''\r\n   }\r\n\r\n   register = () =>{\r\n    const user = {\r\n        firstName: this.state.firstName,\r\n        lastName: this.state.lastName,\r\n        username: this.state.username,\r\n        password: this.state.password\r\n       }\r\n       axios.post('http://localhost:8080/createUser', user)\r\n      .then((response) => {\r\n          if(response.data != null)\r\n            this.setState(this.initialState)\r\n            this.props.history.push('/login')\r\n            alert(\"User Created Successfully\")\r\n       })      \r\n   }\r\n\r\n\r\n    handleChange = (event)=> {\r\n        //console.log(this.state);\r\n        this.setState(\r\n            {\r\n                [event.target.name]\r\n                  :event.target.value\r\n            }\r\n        )\r\n    }\r\n    handleSubmit=(event)=> {\r\n        // Process submit from this.state\r\n        event.preventDefault(); // Need to stop DOM from generating a POST\r\n        }\r\n    render=()=> {\r\n        return (\r\n            <div>\r\n                <h1>Registration</h1>\r\n                <div className=\"container\">\r\n                    <form onSubmit={this.handleSubmit}>\r\n                    First Name: <input type=\"text\" name=\"firstName\" value={this.state.firstName} placeholder='Enter First Name' onChange={this.handleChange}/><br/>\r\n                    Last Name: <input type=\"text\" name=\"lastName\" value={this.state.lastName}  placeholder='Enter Last Name' onChange={this.handleChange}/><br/>\r\n                    UserName: <input type=\"text\" name=\"username\" value={this.state.username} placeholder='Enter username'  onChange={this.handleChange}/><br/>\r\n                    Password: <input type=\"password\" name=\"password\" value={this.state.password}  placeholder='Enter password' onChange={this.handleChange}/><br/><br/>\r\n                    <button className=\"btn btn-success \" onClick={this.register}>Register</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RegistrationComponent","// import React, {Component} from 'react'\r\n// import axios from 'axios'\r\n// //import AuthenticationService from './AuthenticationService.js'\r\n// class UserComponent extends Component {\r\n//     constructor(props){\r\n//         super(props)\r\n//         this.state = {\r\n//             users : []     \r\n//         };\r\n//     }\r\n   \r\n//     handleChange = (e) => {\r\n//         this.setState(\r\n//             {\r\n//                 [e.target.name]\r\n//                   :e.target.value\r\n//             }\r\n//         )\r\n//     }\r\n// componentDidMount=()=>{\r\n// this.getAllUsers();\r\n// }\r\n\r\n// getAllUsers = () =>{\r\n//     axios.get(\"http://localhost:8080/users\")\r\n//     //.then(response => console.log(response.data))\r\n//     .then(response => response.data)\r\n//     .then((response) => {\r\n//           this.setState({users : response.data})\r\n//      })\r\n// }\r\n\r\n// render = ()=> {\r\n//     return (\r\n//         <div>\r\n//             Welcome {this.state.user}. You can manage your Stocks.\r\n//              <h1>User Detail</h1>\r\n//              <div className=\"container\">\r\n//                 <table className=\"table\">\r\n//                     <thead>\r\n//                         <tr>\r\n//                             <th>FirstName</th>\r\n//                             <th>LastName</th>\r\n//                             <th>Balance</th>                   \r\n//                         </tr>\r\n//                     </thead>\r\n//                     <tbody>\r\n//                     {\r\n                       \r\n//                         this.state.users.map (\r\n//                             user =>\r\n//                                 <tr key={user.userId}>\r\n//                                     <td>{user.firstName}</td>\r\n//                                     <td>{user.lastName}</td>\r\n//                                     <td>{user.balance}</td>\r\n//                                     <button className=\"btn btn-success\" onClick={() => this.props.history.push(\"/updateBalance\")}>Update Balance</button>\r\n//                                 </tr>                             \r\n//                         )\r\n//                         }                \r\n//                     </tbody>\r\n//                 </table>\r\n//              </div>\r\n//         </div>\r\n//     )\r\n//   }\r\n// }\r\n\r\n// export default UserComponent\r\n\r\n\r\nimport React, {Component} from 'react'\r\n//import DataService from '../../api/todo/DataService.js'\r\n//import SearchBar  from './SearchBar.jsx'\r\nimport axios from 'axios'\r\n//import UpdateBalance from './UpdateBalance.js';\r\n\r\nimport AuthenticationService from './AuthenticationService.js'\r\nclass UserComponent extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            users : [],\r\n            newBalance:\"\",\r\n            userName: AuthenticationService.getLoggedInUserName()\r\n        };\r\n    }\r\n   \r\n    handleChange = (e) => {\r\n        this.setState(\r\n            {\r\n                [e.target.name]\r\n                  :e.target.value\r\n            }\r\n        )\r\n    }\r\ncomponentDidMount=()=>{\r\nthis.getAllUsers();\r\nthis.updateBalance();\r\n}\r\n\r\ngetAllUsers = () =>{\r\n    axios.get(\"http://localhost:8080/users\")\r\n    //.then(response => console.log(response.data))\r\n    .then(response => response.data)\r\n    .then((response) => {\r\n          this.setState({users : response.data})\r\n     })\r\n}\r\nupdateBalance = ()=>{\r\n       \r\n    console.log(this.state.userName);\r\n     console.log(this.state.newBalance);\r\n    // axios.put(`http://localhost:8080/users/${this.state.userName}/${this.state.newBalance}`)\r\n    //axios.put(`http://localhost:8080/users/${this.state.newBalance}`)\r\n    // axios.put(`http://localhost:8080/users/${this.state.userName}/${this.state.newBalance}`, this.state.users)\r\n     axios.put(`http://localhost:8080/users/${this.state.userName}/${this.state.newBalance}`)\r\n    .then(response => response.data)\r\n    .then((response) => {\r\n     this.setState({users: response.data})\r\n        console.log(this.state.users)\r\n     })\r\n}\r\n\r\nrender = ()=> {\r\n    //const user = AuthenticationService.getLoggedInUserName();\r\n    //console.log(this.state.user);\r\n    return (\r\n        <div>\r\n            Welcome {this.state.user}. You can manage your Stocks.\r\n             <h1>User Detail</h1>\r\n             <div className=\"container\">\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>FirstName</th>\r\n                            <th>LastName</th>\r\n                            <th>Balance</th>                   \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                       \r\n                        this.state.users.map (\r\n                            user =>\r\n                                <tr key={user.userId}>\r\n                                    <td>{user.firstName}</td>\r\n                                    <td>{user.lastName}</td>\r\n                                    <td>{user.balance}</td>\r\n                                     Enter balance: <input type=\"text\" name=\"newBalance\" value={this.state.newBalance} placeholder='Enter balance' onChange={this.handleChange}/>\r\n                              <button className=\"btn btn-success\" onClick={() => this.updateBalance()}>Update Balance</button>\r\n                   <div>{this.state.userName}</div>\r\n                   <div>{this.state.newBalance}</div> \r\n                                </tr>\r\n                               \r\n                        )\r\n                        }\r\n                          {/* Enter balance: <input type=\"text\" name=\"newBalance\" value={this.state.newBalance} placeholder='Enter balance' onChange={this.handleChange}/>\r\n                                   <button className=\"btn btn-success\" onClick={() => this.updateBalance()}>Update Balance</button>\r\n                        <div>{this.state.userName}</div>\r\n                        <div>{this.state.newBalance}</div> */}\r\n\r\n                    </tbody>\r\n                </table>\r\n             </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UserComponent\r\n\r\n\r\n","import React, {Component} from 'react';\nimport Plot from 'react-plotly.js';\nimport SearchBar from './SearchBar';\nclass StockComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      stockChartXValues: [],\n      stockChartYValues: [],\n    }\n  }\n\n  componentDidMount() {\n    this.fetchStock();\n  }\n\n  fetchStock() {\n    const pointerToThis = this;\n    console.log(pointerToThis);\n    const API_KEY = 'HGJWFG4N8AQ66ICD';\n  \n     let StockSymbol = 'FC';\n    let API_Call = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=${StockSymbol}&outputsize=compact&apikey=${API_KEY}`;\n    let stockChartXValuesFunction = [];\n    let stockChartYValuesFunction = [];\n\n    fetch(API_Call)\n      .then(\n        function(response) {\n          return response.json();\n        }\n      )\n      .then(\n        function(data) {\n          console.log(data);\n\n          for (var key in data['Time Series (Daily)']) {\n            stockChartXValuesFunction.push(key);\n            stockChartYValuesFunction.push(data['Time Series (Daily)'][key]['1. open']);\n          }\n\n          // console.log(stockChartXValuesFunction);\n          pointerToThis.setState({\n            stockChartXValues: stockChartXValuesFunction,\n            stockChartYValues: stockChartYValuesFunction\n          });\n        }\n      )\n  }\n\n  render() {\n  \n    return (\n      <div>\n        <h1>JJLZ Stock Market</h1>\n        <SearchBar/>\n        <Plot\n          data={[\n            {\n              x: this.state.stockChartXValues,\n              y: this.state.stockChartYValues,\n              type: 'scatter',\n              mode: 'lines+markers',\n              marker: {color: 'blue'},\n            }\n          ]}\n          layout={{width: 720, height: 440, title: 'JJLZ Alchemy '}}\n        />\n      </div>\n    )\n  }\n  \n}\n// function SearchBar(){\n\n//   return (<form action=\"/stock\" method=\"get\" align=\"center\">\n//   <label htmlFor=\"header-search\">\n//       <span className=\"visually-hidden\" > Search Stock Name</span>\n//   </label>\n//   <input  type=\"text\"  id=\"header-search\"  placeholder=\"Enter Stock Name\"  name=\"s\" />\n//   <button type=\"submit\">Search</button>\n//   </form>)\n//   }\nexport default StockComponent;","import React, {Component} from 'react'\r\n\r\nclass WelcomeComponent extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n          <div className=\"container\">\r\n            <h1> JJLZ!</h1>\r\n            <h1> ---------------</h1>\r\n                <h3> John</h3>\r\n                <h3> Jonathan</h3>\r\n                <h3> Levan</h3>\r\n                <h3> Zeyad</h3>\r\n\r\n            </div>\r\n             \r\n               \r\n            </>\r\n        )        \r\n    }\r\n}\r\nexport default WelcomeComponent","import React, {Component} from 'react'\r\n\r\n\r\nclass UpdateBalance extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = this.initialState\r\n    }\r\n\r\nrender = () => {\r\n    return (\r\n        <div>\r\n            <h1>User Balance</h1><br/>\r\n            <div>\r\n            <input type=\"text\" name=\"username\"  placeholder='Deposit' onChange={this.handleChange}/>\r\n            <button className=\"btn btn-success\" onClick={() => this.props.history.push(\"/updateBalance\")}>Deposit</button><br />\r\n            <input type=\"text\" name=\"username\"  placeholder='Withdraw' onChange={this.handleChange}/>\r\n            <button className=\"btn btn-success\" onClick={() => this.props.history.push(\"/updateBalance\")}>Withdrwa</button><br />\r\n            </div>\r\n        </div>\r\n    )\r\n   }\r\n}\r\n\r\nexport default UpdateBalance\r\n  ","import React, {Component} from 'react'\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport AuthenticatedRoute from './AuthenticatedRoute.jsx'\nimport LoginComponent from './LoginComponent.jsx'\nimport WatchListComponent from './WatchListComponent.jsx'\nimport ErrorComponent from './ErrorComponent.jsx'\nimport HeaderComponent from './HeaderComponent.jsx'\nimport FooterComponent from './FooterComponent.jsx'\nimport LogoutComponent from './LogoutComponent.jsx'\nimport WelcomeComponent from './WelcomeComponent.jsx'\nimport RegistrationComponent from './RegistrationComponent.jsx'\nimport UserDetailComponent from './UserDetailComponent.jsx'\nimport StockComponent from './StockComponent.jsx'\nimport JJLZ from './JJLZ.jsx'\n//import SearchBar from './SearchBar.jsx'\nimport UpdateBalance from './UpdateBalance.jsx';\n\nclass TodoApp extends Component {\n    render() {\n        return (\n            <div className=\"TodoApp\">\n                <Router>\n                    <>\n                        <HeaderComponent/>\n                        <Switch>\n                            <Route path=\"/\" exact component={WelcomeComponent}/>  \n                            <Route path=\"/welcome\" exact component={WelcomeComponent}/>                     \n                            <Route path=\"/register\" component={RegistrationComponent}/>\n                            <Route path=\"/login\" component={LoginComponent}/>\n                            <Route path=\"/jjlz\" component={JJLZ}/>\n                            <Route path=\"/userDetail\" component={UserDetailComponent}/>\n                            <Route path=\"/stock\" component={StockComponent}/>\n                            <Route path=\"/updateBalance\" component={UpdateBalance}/>\n                            <AuthenticatedRoute path=\"/welcome/:name\" component={WelcomeComponent}/>\n                            <AuthenticatedRoute path=\"/watchlist\" component={WatchListComponent}/>\n                            <AuthenticatedRoute path=\"/logout\" component={LogoutComponent}/>\n                            <Route component={ErrorComponent}/>\n                        </Switch>\n                        <FooterComponent/>\n                    </>\n                </Router>\n            </div>\n        )\n    }\n}\n\nexport default TodoApp","import React, { Component } from 'react';\nimport TodoApp from './components/todo/TodoApp'\nimport './App.css';\nimport './bootstrap.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n         <TodoApp/>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}