{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zdn_8\\\\Desktop\\\\JJLZ_UI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zdn_8\\\\Desktop\\\\JJLZ_UI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\zdn_8\\\\Desktop\\\\JJLZ_UI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\zdn_8\\\\Desktop\\\\JJLZ_UI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\zdn_8\\\\Desktop\\\\JJLZ_UI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zdn_8\\\\Desktop\\\\JJLZ_UI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\zdn_8\\\\Desktop\\\\JJLZ_UI\\\\src\\\\components\\\\todo\\\\UpdateBalance.jsx\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport TodoDataService from '../../api/todo/TodoDataService.js';\nimport AuthenticationService from './AuthenticationService.js';\n\nvar UpdateBalance =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UpdateBalance, _Component);\n\n  function UpdateBalance(props) {\n    var _this;\n\n    _classCallCheck(this, UpdateBalance);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UpdateBalance).call(this, props));\n    _this.state = {\n      id: _this.props.match.params.id,\n      description: '' // targetDate : moment(new Date()).format('YYYY-MM-DD')\n\n    };\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.validate = _this.validate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(UpdateBalance, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (this.state.id === -1) {\n        return;\n      }\n\n      var username = AuthenticationService.getLoggedInUserName();\n      TodoDataService.retrieveTodo(username, this.state.id).then(function (response) {\n        return _this2.setState({\n          description: response.data.description,\n          targetDate: moment(response.data.targetDate).format('YYYY-MM-DD')\n        });\n      });\n    } // validate(values) {\n    //     let errors = {}\n    //     if(!values.description) {\n    //         errors.description = 'Enter a Description'\n    //     } else if(values.description.length<5) {\n    //         errors.description = 'Enter atleast 5 Characters in Description'\n    //     }\n    //     if(!moment(values.targetDate).isValid()) {\n    //         errors.targetDate = 'Enter a valid Target Date'\n    //     }\n    //     return errors\n    // }\n\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(values) {\n      var _this3 = this;\n\n      var username = AuthenticationService.getLoggedInUserName();\n      var todo = {\n        id: this.state.id,\n        description: values.description,\n        targetDate: values.targetDate\n      };\n\n      if (this.state.id === -1) {\n        TodoDataService.createTodo(username, todo).then(function () {\n          return _this3.props.history.push('/todos');\n        });\n      } else {\n        TodoDataService.updateTodo(username, this.state.id, todo).then(function () {\n          return _this3.props.history.push('/todos');\n        });\n      }\n\n      console.log(values);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          description = _this$state.description,\n          targetDate = _this$state.targetDate; //let targetDate = this.state.targetDate\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Todo\"), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, function (props) {\n        return React.createElement(Form, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(ErrorMessage, {\n          name: \"description\",\n          component: \"div\",\n          className: \"alert alert-warning\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }), React.createElement(ErrorMessage, {\n          name: \"targetDate\",\n          component: \"div\",\n          className: \"alert alert-warning\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }), React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, \"Description\"), React.createElement(Field, {\n          className: \"form-control\",\n          type: \"text\",\n          name: \"description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        })), React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, \"Target Date\"), React.createElement(Field, {\n          className: \"form-control\",\n          type: \"date\",\n          name: \"targetDate\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        })), React.createElement(\"button\", {\n          className: \"btn btn-success\",\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, \"Save\"));\n      }));\n    }\n  }]);\n\n  return UpdateBalance;\n}(Component);\n\nexport default UpdateBalance;","map":{"version":3,"sources":["C:\\Users\\zdn_8\\Desktop\\JJLZ_UI\\src\\components\\todo\\UpdateBalance.jsx"],"names":["React","Component","moment","Formik","Form","Field","ErrorMessage","TodoDataService","AuthenticationService","UpdateBalance","props","state","id","match","params","description","onSubmit","bind","validate","username","getLoggedInUserName","retrieveTodo","then","response","setState","data","targetDate","format","values","todo","createTodo","history","push","updateTodo","console","log"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport moment from 'moment'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport TodoDataService from '../../api/todo/TodoDataService.js'\r\nimport AuthenticationService from './AuthenticationService.js'\r\n\r\nclass UpdateBalance extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            id : this.props.match.params.id,\r\n            description : ''\r\n            // targetDate : moment(new Date()).format('YYYY-MM-DD')\r\n        }\r\n\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.validate = this.validate.bind(this)\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if(this.state.id===-1) {\r\n            return\r\n        }\r\n        \r\n        let username = AuthenticationService.getLoggedInUserName()\r\n        \r\n        TodoDataService.retrieveTodo(username, this.state.id)\r\n             .then(response => this.setState({\r\n                description: response.data.description,\r\n                targetDate: moment(response.data.targetDate).format('YYYY-MM-DD')\r\n             }))\r\n    }\r\n\r\n    // validate(values) {\r\n    //     let errors = {}\r\n    //     if(!values.description) {\r\n    //         errors.description = 'Enter a Description'\r\n    //     } else if(values.description.length<5) {\r\n    //         errors.description = 'Enter atleast 5 Characters in Description'\r\n    //     }\r\n\r\n    //     if(!moment(values.targetDate).isValid()) {\r\n    //         errors.targetDate = 'Enter a valid Target Date'\r\n    //     }\r\n\r\n    //     return errors\r\n\r\n    // }\r\n\r\n    onSubmit(values) {\r\n        let username = AuthenticationService.getLoggedInUserName()\r\n\r\n        let todo = {\r\n            id: this.state.id,\r\n            description: values.description,\r\n            targetDate: values.targetDate\r\n        }\r\n\r\n        if (this.state.id === -1) {\r\n            TodoDataService.createTodo(username, todo)\r\n                .then(() => this.props.history.push('/todos'))\r\n        } else {\r\n            TodoDataService.updateTodo(username, this.state.id, todo)\r\n                .then(() => this.props.history.push('/todos'))\r\n        }\r\n        \r\n        console.log(values);\r\n    }\r\n\r\n    render() {\r\n        \r\n        let {description,targetDate} = this.state\r\n        //let targetDate = this.state.targetDate\r\n\r\n        return (\r\n            <div>\r\n                <h1>Todo</h1>\r\n                <div className=\"container\">\r\n                  \r\n    \r\n                        {\r\n                            (props) => (\r\n                                <Form>\r\n                                    <ErrorMessage name=\"description\" component=\"div\" \r\n                                                                className=\"alert alert-warning\"/>\r\n                                    <ErrorMessage name=\"targetDate\" component=\"div\" \r\n                                                                className=\"alert alert-warning\"/>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>Description</label>\r\n                                        <Field className=\"form-control\" type=\"text\" name=\"description\"/>\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>Target Date</label>\r\n                                        <Field className=\"form-control\" type=\"date\" name=\"targetDate\"/>\r\n                                    </fieldset>\r\n                                    <button className=\"btn btn-success\" type=\"submit\">Save</button>\r\n                                </Form>\r\n                            )\r\n                        }\r\n                 \r\n                \r\n                </div>                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UpdateBalance"]},"metadata":{},"sourceType":"module"}